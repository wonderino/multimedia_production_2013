
멀티미디어발상연습 2013. 프로세싱 워크샵 (1)
=================================



원인호 [wonderino쥐메일](mailto:wonderino@gmail.com)

[수업용 깃허브](https://github.com/wonderino/multimedia_production_2013)


---

## 프로세싱 소개
* [processing.org](http://processing.org)
	1. JAVA 언어를 이용한 라이브러리 + IDE
	2. Javascript도 제공 [processingjs.org](http://processingjs.org)
---


## 가져다 쓰기
#### Hello Wolrd
  
  1. `println ("Hello World");`
  2.  줄바꿀때는 항상 `;` 
  3. `"좌" + "우"`
 

#### 프로세싱 이모저모
 - point/line/rect/ellipse/triangle/arc/quad/curve...


 	1. FUNCTION (x, y, z, a, b....);
 		- `point(10, 10);  //점(x,y)`
 		- `line(10, 10, 50, 50); // 직선(시작x, 시작y, 끝x, 끝y)`
 		- `rect(20, 20, 50, 50);  //네모(좌측상단x, 좌측상단y, 넓이, 높이)`
 		- `ellipse(20,20,100,100);  //타원(중심x, 중심y, 넓이, 높이)`
 	2. 나머지는 여기서 -> [processing refrence](http://processing.org/reference/)
  		
  
 - 위치 : cartesian coordinate
 
 	![프로세싱의 좌표계](./img/coordinates.gif)


 - 색상 : fill, stroke
 	1. RGBA
 	2. 0~255(검정->흰) : 256단계 // 8비트
 	
		![Color Cube](./img/color_cube.gif)

 - 내 마음대로 그리기: 
   1. 자유도형 [beginShape/vertex/endShape](http://processing.org/reference/beginShape_.html)
   2. 곡선 그리기 [bezier](http://processing.org/reference/bezier_.html), [curve](http://processing.org/reference/curve_.html)

 - 배경: size/background
	- `size(400, 300); //캔버스의 크기 `
	- `background(255); //캔버스의 배경색`
	
 - 주석 
	- `// 왜 안 돌아가지?`
  
  	- `/* 난 누군가.`
  	
  		`또 여긴 어딘가. */`


 - 움직여라
 	1. setup/draw
 	
  		- `void setup() { size(400,300);} //실행하면 한번만 실행될 코드`
  		- `void draw() { println(millis()); rect(100,100, 200, 100);} //실행하면 계속해서 실행될 코드`
  	
  	2. frameRate/frameCount ([프레임레이트 란?](http://ko.wikipedia.org/wiki/%ED%94%84%EB%A0%88%EC%9E%84_%EB%A0%88%EC%9D%B4%ED%8A%B8))

  		- `frameRate(60); // 초당 draw함수를 몇번 실행시킬까.`
  		- `println(frameCount) //지금 몇 프레임 지났냐`


- 더 움직여보자
	1. key(Pressed/Released/Typed)
    	* `void keyPressed(){println(key);}`
    	* key
    	
  	2. mouse(Pressed/Clicked/Moved/Released/Dragged)
  		* `void mousePressed(){background(random(0,255));}`
  		* mouseX, mouseY, pmouseX, pmouseY

- 임의의 수 : random

----


## 이걸 어디 좀 넣어 둬야 하는데 : 변수(variable)
#### 변수의 선언과 명명규칙
1. 변수란? 그럼 안변수는?
 
 * 변수와 상수 : 바꿀수 있거나 없거나

2. 선언과 초기화
 
 	`int number;`

 	`number = 10;`

 	`int next_number = 10;`

 * 대소문자 구분/예약어 주의/문자로 시작/특수문자는 -,$ 만

#### 변수의 타입 : 기본형/논리형/문자형/정수형/실수형

	- boolean : true/false
	- char : 'a'
	- bype : -128~127
	- short : -32768 ~ 32767
	- int : -2147483648 ~ 2147483647
	- float : 1.4E-45 ~ 3.4028235E38
		`float pi = 3.14;`
	- long/duble


 ** 모르겠으면 '정수는 int' '실수는 float'이구나 정도...**


#### 형변환 Casting

 `float f = 100.0;`
 
 `int i = 10 + (int)f;`
 
 `float a = 10.0 + i;`

 ** 작은 형에서 큰 형으로 변환은 생략해도 좋다. 


#### 여러문자 String(앞이 대문자!)
 `String deostroy = "파." + "괘." + "한." + "다.";`

#### 변수의 영역 : {...}를 기준으로 한다.
	- Global 전역변수 : 아무곳에서나 접근 가능하다.
	- Local 지역변수 : {}안에서만 기억된다.
	
##### 예약어 : 이미 정의되어있으므로 사용 말자([목록](http://forum.processing.org/topic/reserved-keywords-wiki-page))

---
## 산수 : 연산자
 
* 단항연산자 : ++ -- + - ~ ! (타입)
* 산술연산자 :  * / % _ - << >> >>>
* 비교연산자 : > < <= >= instanceof == !=
* 논리연산자 : % ^ | && || 
* 삼항연산자 : ?:
* 대입연산자 : = *= /= %= += -= ........


1. 우선순위가 있다. 모르면 괄호쳐라.
2. 형변환!!
3. 단항과 대입은 왼쪽으로 진행
	
	`int a = 10;`
	
	`color c = color(255,125,45);`

	`a += 10;`

	`a++;`

4. 나머지 연산자(%)를 잘 사용하자.
	`background(frameCount%255);`

---


## 이리가거라 저리가거라 : 조건문
#### if , switch

	if(조건식) {뭐라도 좀 해보지;}
	else if(다음 조건식) {그렇다면 이거라도;}
	else {모르겠다;}

1. 조건식 == 결과가 boolean 값 (><== 이런 연산을 쓰면될걸)
2. 중첩이 가능
3. [switch](http://processing.org/reference/switch.html)는 시간 관계상...


---
## 갈때까지 가봐라 : 반복문
1. while : 조건문이 true이면 계속하거라;
	
	while(조건문) {...;}
	
	`int a = 10;`
	
	`while(a>0) {point(a* width/11, height/2); a--}`
	 
2. for : 초기화-> 조건식 -> 뭔가 한다 -> 증감식

	for(초기화;조건식;증감식){...;}
	
	`for (int i=10; i > 0; i--) {point(i* width/11, height/2);}`
	
	
	
	

3. 탈출!!! break와 continue

4. 이중루프

`for(int i=0 ; i < 10 ; i++){
	for(int j=0; j < 10 ; j++){	
	println("i: "+ i + " j: "+ j);	
 }
}`


---
## 여러값을 차곡차곡 : 배열

	`int[] score = new int[5];`
	`int[] score = {10,20,30,40};`

1. 0부터 시작한다.......
2. 개수를 알려주자
3. 반복문을 활용하자.

	`for(int i=0; i < score.length; i++) {println(score[i]);}`


4. new가 뭐지????
5. 내 마음속의 표그리기 : 다차원 배열 [행][열] = [가로][세로]

	`int[][] score = new int[5][3]; // 5*3 행렬`
	 

	** po이중루프!!wer를 활용한다면!!!!**

---
## 블랙박스 만들기 : 함수
	`int add(int a, int b) { return a+b }'

1. return 값의 타입 명시
2. 내놓을것이 없다면 void
	
	`void myRect(int x, int, y, int w, int h){…}`
	
3. 앞에 배운걸 다 여기 넣으면 됨. 
4. 변수의 범위를 주의 할 것!! 

---
## 텍스트 자료 불러오기/내보내기

* 부른다. [loadStrings](http://processing.org/reference/loadStrings_.html)

* 찢는다. [split](http://processing.org/reference/split_.html)

* 내보낸다. [saveStrings](http://processing.org/reference/saveStrings_.html)


* 엑셀을 어떻게 읽을까?
	1. csv를 활용한다면
	2. 이걸 이중배열에 집어 넣는다면!!
	3. 주의사항은 숫자도 String !! 따라서 형변환

---
## 간단한 바그래프 만들어보기
 
---
## 산포도 그려보기
 ([scatter_plot](http://en.wikipedia.org/wiki/Scatter_plot))

---
## 시계 + 파이차트
 


---

